<?php

namespace common\models;

use Yii;
use yii\helpers\Html;

/**
 * This is the model class for table "post".
 *
 * @property int $id
 * @property string $title
 * @property string $content
 * @property string $tags
 * @property int $status
 * @property int $create_time
 * @property int $update_time
 * @property int $author_id
 *
 * @property Comment[] $comments
 * @property Adminuser $author
 * @property Poststatus $status0
 */
class Post extends \yii\db\ActiveRecord
{
    /**
     * @var string
     */
    protected $_oldTags = '';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'post';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'content', 'status', 'author_id'], 'required'],
            [['content', 'tags'], 'string'],
            [['status', 'create_time', 'update_time', 'author_id'], 'integer'],
            [['title'], 'string', 'max' => 128],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => Adminuser::className(), 'targetAttribute' => ['author_id' => 'id']],
            [['status'], 'exist', 'skipOnError' => true, 'targetClass' => Poststatus::className(), 'targetAttribute' => ['status' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '序号',
            'title' => '标题',
            'content' => '内容',
            'tags' => '标签',
            'status' => '状态',
            'create_time' => '发布时间',
            'update_time' => '最后一次跟新时间',
            'author_id' => '作者',
            'autor_name' => '作者'
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        // hasMany()用于一对多
        return $this->hasMany(Comment::className(), ['post_id' => 'id'])->where(['status'=>1]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAuthor()
    {
        // hasOne()用于多对一  或一对一
        return $this->hasOne(Adminuser::className(), ['id' => 'author_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStatus0()
    {
        return $this->hasOne(Poststatus::className(), ['id' => 'status']);
    }

    /**
     * 重写beforesave 方法
     * @return bool
     */
    public function beforeSave($insert)
    {
        //执行父类方法
        if (parent::beforeSave($insert)) {
            //执行成功后，设置对象属性值
            if ($insert) {
                //创建文章操作
                $this->update_time = time();
                $this->create_time = time();
            } else {
                //更新操作
                $this->update_time = time();
            }
            return true;
        } else {
            return false;
        }
    }

    /**
     *
     */
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        //保存之前标签
        $this->_oldTags = $this->tags;
    }

    /**
     * 修改标签 添加 或删除
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        // echo $this->_oldTags,$this->tags;exit();
        Tag::updateTags($this->_oldTags, $this->tags);
    }

    /**
     *删除标签
     */
    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        Tag::updateTags($this->tags, '');
    }

    /**
     * 通过getter方法设置URL 添加Url属性
     * @return string
     */
    public function getUrl()
    {
        return Yii::$app->urlManager->createUrl([
            'post/detail',
            'id' => $this->id,
            //优化SEO
           // 'title' => $this->title,
        ]);
    }

    /**
     * 截取内容
     */
    public function getContent($length = 200)
    {
        //去除文章里的标签
        $strap_data = strip_tags($this->content);
        //计算总长度 注意中文字符的计算长度
        $count = mb_strlen($strap_data);
        //返回数据
        $sub_data = mb_substr($strap_data, 0, $length, 'utf-8');

        return $sub_data . ($count > $length ? '......' : '');
    }

    /**
     * 标签连接
     * @return array
     */
    public function getTagLinks()
    {
        $links = array();
        foreach (Tag::stringToarray($this->tags) as $tag) {
            $links[] = Html::a(Html::encode($tag), array('post/index', 'PostSearch[tags]' => $tag));
        }
        return $links;
    }

    /**
     * 获取评论条数
     * @return int|string
     */
    public function getCommentCount()
    {
        return Comment::find()->where(['post_id'=>$this->id,'status'=>1])->count();
    }
}
